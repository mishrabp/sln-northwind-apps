# deploy-appservice-template.yml
# It deploys code into app services on Azure

parameters:
- name: environment # don't pass run-time variables
- name: webAppName
- name: subscription
- name: artifactName
  default: drop
- name: webAppRG

jobs:
- deployment: DeployToWebAppService
  environment: ${{ parameters.environment }}
  displayName: 'Deploy to Azure App Service'
  strategy: 
    runOnce:
      deploy:
        steps:
        - download: none
        - task: DownloadPipelineArtifact@2
          displayName: 'Downloading zip....'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: ${{ parameters.artifactName }}
            pattern: drop/strapi.zip
            targetPath: '$(System.DefaultWorkingDirectory)/publish'
        - task: AzureRmWebAppDeployment@4
          displayName: 'Publish zip to App Service....'
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: ${{ parameters.subscription }}
            appType: 'webAppLinux'  #its webApp for windows based apps. webAppLinux for linux based apps
            WebAppName: ${{ parameters.webAppName }}
            packageForLinux: '$(System.DefaultWorkingDirectory)/publish/strapi.zip'
            ResourceGroupName: ${{ parameters.webAppRG }}
            StartupCommand: 'npm start'
            #Deploying to staging slot
            deployToSlotOrASE: true
            SlotName: 'staging'
        - task: AzureAppServiceManage@0
          displayName: 'Swap the staging slot with production (Blue-Green Deployment)'
          inputs:
            azureSubscription: '${{ parameters.subscription }}'
            appType: webAppLinux
            WebAppName: ${{ parameters.webAppName }}
            ResourceGroupName: ${{ parameters.webAppRG }}
            SourceSlot: 'staging'
            SwapWithProduction: true
